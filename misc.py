from room import *
from item import *
from person import *
import random

# Rooms
a = Room("Central Fountain")
b = Room("Snail Field")
c = Room("Cacaland")
d = Room("Doodooland")
e = Room("Earf")
f = Store("Candy Kitchen", 200)
g = Room("Greenland")
h = Room("Fartland")
i = Store("Toe Locker", 200)
j = Store("Fingerboard Enterprises", 2)
k = Room("Corner of Flowers")
l = Store("Eyeball Factory", 200)
m = Room("Murky Waters")
allRooms = [a,b,c,d,e,f,g,h,i,j,k,l,m]
nonStoreRooms = [a,b,c,d,e,g,h,k,m]

# Room specific items
a0 = Food("Slurpie", "Slurpie made from fountain water", 2, 15)
b0 = Clothes("Snail Shield", "Armor made from the shells of snails", 25, 12)
c0 = Item("Snail Poop", "Snail poop mixed with a bit of snail slime", 1)
c1 = Item("Bird Poop", "A congelation of bird poop", 1)
c2 = Item("Dog Poop", "An unsealed bag of dog poop", 1)
h0 = Item("Bag of Farts", "Limited edition", 25)
m0 = Food("Raw Fish", "Risk of salmonella, but it's probably ok", 10, 10)

# Room Items
r0 = Item("Rock", "This is just a rock.", 0)
r1 = Clothes("Apron", "Has some mysterious stains on it", 5, 7)
r2 = Clothes("Handkerchief", "Protect yourself when eating", 3, 5)
r3 = Clothes("Shirt", "A slightly smelly t-shirt", 10, 10)
r4 = Shoes("Jordans", "Creased.", 20, 3)
r5 = Shoes("Running Shoes", "Probably worn in at least 3 marathons", 25, 5)
r6 = Item("Bucket", "A little kid probably dropped this", 4)
r7 = Weapon("Used Needle", "Don't poke yourself", 0, 6)
r8 = Weapon("Metal Pole", "Probably from a stop sign", 10, 5)
r9 = Item("Leafblower", "Used to blow leaves", 25)
r10 = Disguise("Paper Bag", "Has eye cutouts", 5)
r11 = Disguise("Plastic Bag", "Has eye holes", 5)
r12 = Shoes("Skate Shoes", "Scuffed to the point you can't tell the brand", 10, 3)
r13 = Item("Nails", "A pack of nails", 5)
r14 = Item("Marbles", "A pack of marbles", 6)
r15 = Food("Slim Jim", "Good source of protein", 2, 15)
r16 = Food("Lollipop", "Still wrapped", 1, 10)
r17 = Food("Jolly Rancher", "Looks unopened", 1, 10)
room_items = [r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17]

# Person Items
p0 = Weapon("Wrench", "A somewhat rusty wrench", 5, 5)
p1 = Item("iPhone 5s", "Pretty old, but probably still worth quite a bit", 35)
p2 = Item("Nokia", "A Nokia", 15)
p3 = Item("iPhone 6", "Cracked screen", 60)
p4 = Food("Pizza", "Slice of pizza", 2, 15)
p5 = Food("Kombucha", "Might be a little old", 3, 10)
p6 = Weapon("Toothpick", "A used toothpick", 1, 1)
p7 = Item("Dentures", "An old man's dentures", 5)
p8 = Weapon("Hammer", "A somewhat rusty hammer", 5, 5)
p9 = Weapon("Pencil", "A wooden school pencil", 2, 2)
p10 = Food("Water Bottle", "Stay hydrated", 2, 20)
p11 = Item("Passport", "Somebody's passport", 50)
p12 = Food("Snickers", "Snickers bar", 2, 15)
p13 = Food("Kit Kat", "Unopened", 2, 15)
p14 = Weapon("Broken Bottle", "Sharp", 2, 7)
p15 = Item("Plane Ticket", "Someone isn't making it to their flight", 50)
p16 = Item("Dog Poop", "A (sealed) bag of poop", 1)
p17 = Food("Soda", "An unopened can of Coke", 2, 15)
p18 = Food("Caprisun", "A caprisun with the straw missing", 2, 17)
p19 = Clothes("Jersey", "A used, smelly basketball jersey", 10, 10)
p20 = Clothes("Baseball Hat", "The Giants hat", 15, 10)
p21 = Clothes("Skirt", "About knee high", 15, 9)
p22 = Clothes("Skirt", "About thigh high", 14, 8)
p23 = Clothes("Wrist Brace", "To protect your wrist", 20, 12)
p24 = Clothes("Knee Pads", "Now you don't have to worry about falling", 20, 12)
p25 = Item("Diapers", "Luckily unused", 20)
p26 = Disguise("Mask", "Probably an actor's mask", 10)
p27 = Disguise("Face Paint", "An assortment of colors", 15)
p28 = Disguise("Straw Hat", "A straw hat that covers your eyes", 20)
p29 = Weapon("Pepper Spray", "Aim for the eyes", 10, 5)
p30 = Shoes("Sketchers", "Comfortable", 40, 7)
p31 = Shoes("Crocs", "Maybe not the best for running", 30, 4)
p32 = Shoes("Vans", "Scuffed skate shoes", 25, 5)
person_items = [p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,\
    p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32]

# Merchant/ Store Items
s0 = Shoes("Jordans", "Slightly creased", 30, 5, True)
s1 = Clothes("Shirt", "A striped long-sleeve shirt", 20, 18, True)
s2 = Disguise("Cloak", "A black cloak", 25, True)
s3 = Shoes("Running Shoes", "A pair of new running shoes", 50, 10, True)
s4 = Clothes("Jersey", "A basketball jersey", 15, 15, True)
s5 = Disguise("Ski Mask", "A black ski mask", 10, True)
s6 = Disguise("Glasses", "Very convincing glasses", 15, True)
s7 = Disguise("Braces", "Very convincing braces", 25, True)
s7 = Weapon("Kitchen Knife", "Brand new stainless steel", 10, 7, True)
s8 = Weapon("Nerf Gun", "Enhanced with thumbtacks", 30, 9, True)
s9 = Weapon("Slingshot", "David vs. Goliath cosplay", 15, 6, True)
s10 = Weapon("Nunchucks", "Don't hit yourself", 15, 6, True)
s11 = Food("Jar of Worms", "Contains a lot of protein, healthy!", 10, 25, True)
s12 = Food("Chicken", "Just a whole chicken", 20, 25, True)
s13 = Food("Strawberries", "One of the two fruits in this world", 7, 18, True)
s14 = Food("Persimmon", "One of the two fruits in this world", 5, 15, True)
s15 = Clothes("Overalls", "Jean overalls", 25, 20, True)
s16 = Clothes("Helmet", "Helmet with the mohawk spikes on top", 20, 18, True)
s17 = Clothes("Ball Guard", "Protect", 18, 16, True)
s18 = Clothes("Hoodie", "A black zip-up hoodie", 22, 21, True)
s19 = Shoes("Nikes", "White AF1", 40, 8, True)
s20 = Shoes("Adidas", "White", 40, 8, True)
s21 = Weapon("Axe", "A new axe", 25, 9, True)
s22 = Disguise("Jumpsuit", "Prisoner cosplay", 20, True)
merchant_items = [s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,\
    s19,s20,s21,s22]

# Enforcer Items
e0 = Weapon("Baton", "Ouchies", 5, 8)
e1 = Weapon("BB Gun", "Enforcers aren't allowed to carry guns", 25, 10)
e2 = Disguise("Enforcer Badge", "Certified top-rank enforcer", 30)
e3 = Disguise("Enforcer Hat", "Might contain headlice", 15)
e4 = Clothes("Work Pants", "Has a yellow stain", 10, 10)
e5 = Food("Donut", "Glazed", 2, 15)
e6 = Weapon("Katana", "Kind of dull, but can still cut", 30, 9)
e7 = Food("Starbursts", "A pack of 5 starbursts", 2, 15)
e8 = Disguise("Sunglasses", "Protects and blocks the eyes", 20)
e9 = Weapon("Taser", "Zap zap", 30, 12)
e10 = Shoes("Boots", "Big boots", 20, 8)
e11 = Clothes("Coat", "Thick coat for the cold", 25, 10)
e12 = Item("Cigarettes", "Lung cancer", 8)
enforcer_items = [e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12]

# used to call a random enforcer to room when caught pickpocketing
enf1 = Enforcer("Cait", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf2 = Enforcer("Vi", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf3 = Enforcer("Marcus", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf4 = Enforcer("Grayson", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf5 = Enforcer("Gray", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf6 = Enforcer("Connor", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf7 = Enforcer("Shmurda", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf8 = Enforcer("Bobby", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf9 = Enforcer("Tank", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
enf10 = Enforcer("Tuna", random.choice(allRooms), random.sample(enforcer_items, random.randint(1,3)))
allEnforcers = [enf1,enf2,enf3,enf4,enf5,enf6,enf7,enf8,enf9,enf10]
enforcersAdded = []
